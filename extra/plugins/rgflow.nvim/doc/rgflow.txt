*rgflow.txt*  Ripgrep interface
Author:  Michael Angelozzi <http://github.com/michael-angelozzi/>
License: Same terms as Vim itself (see |license|)

This plugin is made for Neovim (not VIM compatible).

INTRODUCTION                                    *rgflow*

Allows one to flow with ripgrep from within Neovim. It is not simply a wrapper
which could be replaced by a few lines of config. It provdes the following functions:

By default will turn off relative number etc, can disable qf settings from applying
by making a ftplugin/qf.vim file and putting this inside it:
	let b:did_ftplugin = 1


Highlight matches even if you use regex

Always add these flags:
local rg_args = {"--vimgrep", "--no-messages", "--replace",  "\30$0\30"}

Disables <C-^> and <C-S-^> and <C-6> when in the quickfix window.

Can use q: or c_^F to show a history of searches, and repeat a search

COMMANDS                                        *rgflow-commands*

                                                *rgflow-:Cfind*
                                                *rgflow-:Find*
:Cfind[!] {args}        Run `find` and load the results into the quickfix
                        list.  Jump to the first result unless ! is given.

                                                *rgflow-:Lfind*
:Lfind[!] {args}        Run `find` and load the results into the location
                        list.  Jump to the first result unless ! is given.


                                                *rgflow-:Wall* *rgflow-:W*
:Wall                   Like |:wall|, but for windows rather than buffers.
:W                      It also writes files that haven't changed, which is
                        useful for kicking off build and test suites (such as
                        with watchr or guard).  Furthermore, it handily
                        doubles as a safe fallback for people who, like me,
                        accidentally type :W instead of :w a lot.

<CR> starts search
<ESC> <C-C> <C-[> aborts
<TAB> mark
<S-TAB> Unmark
d (delete operator) removes lines

HIGHLIGHTING
Highlight color groups
after a search if incsearch is on, then it will be coloured in the qf with the 'Search'
highlight style. If one performs an incsearch for a different term, it will show
the RgFlowQfPattern highlight

To change the file name see:
to change col number see:

foo\bar.lua|101 col 4| local cows = "restless"
<filename> <separator> <line/col number> <Text>

hi qfFileName      guifg=red    gui=bold
hi qfLineNr        guifg=yellow
hi qfSeparator     guifg=black
hi Normal          guifg=white  guibg=black

hi QuickFixLine    guifg=yellow gui=bold      " The last quick entry browsed to

    let g:rgflow_search_keymaps = 1
    let g:rgflow_qf_keymaps = 1



example links
-L=follow sym links, --hidden=hidden files, --no-ignore=Don't use .ignore files, --no-messages=supress IO errors, --trim=Leading whitespace
-S = Smart case
-i ignore case
-s case sensitive
--no-ignore Don't respect ignore files

--no-messages Suppress all error messages related to opening and reading files.

-r, --replace <REPLACEMENT_TEXT> , got replace line with invisible markers, and then highlight it in vim
--trim
            When set, all ASCII whitespace at the beginning of each line printed will be
            trimmed.

-u = dont respenct git ignore
-uu = liek -u but also dont respect hidden
-uuu = like -uu but also search binary files


if g:rgflow_default_keymaps
qf.vim hotkeys disabled
ripgrep search hotkeys disabled



ABOUT                                           *rgflow-about*

Grab the latest version or report a bug on GitHub:

http://github.com/michael-angelozzi/rgflow

 vim:tw=78:et:ft=help:norl: